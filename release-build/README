Automatic RabbitMQ release builds
=================================

The build.sh script in this directory automates the process of
performing a RabbitMQ release build.  The rabbitmq-umbrella Makefile
already automates most of the Linux side of the build. This script
contains the ssh-and-rsync glue to pull the whole thing together
into a single command.


Prerequisites
-------------

A number of hosts are involved in the build process.  You probably
should use your favourite full-system virtualization technology to run
some of these as guest VMs.

- Master host: Runs the build.sh script, performs the git commands,
  ssh's into the other hosts to make the build happen, signs the
  results of the build, deploys them, and generally runs the show.
  Any Linux should be suitable. There are few otherwise-inessential
  dependencies; probably just make and rsync.

- Build host: Runs the rabbitmq-umbrella Makefile 'dist' target.
  build.sh will take care of the process of downloading, building, and
  locally installing the appropriate OTP versions (via the
  install-otp.sh script).  The build.sh script will also ensure that
  all prerequisite packages for the build are installed on the build
  host.  So that it can do this, the ssh key in use should be in
  root's authorized_keys file on the build host.

- Deployment host: Once the build is complete, the rabbitmq-umbrella
  Makefile will deploy the resulting artifacts to the
  /home/rabbitmq/extras directory on the deployment host via ssh and
  sync.

Some of these hosts may be the same.  For my test builds, the master
host and deployment host are my desktop machine, and the build host
is a guest VM running under kvm.


Build.sh parameters
-------------------

build.sh takes a large number of parameters in order to configure it
for the build environment.  These are set on the command line in a
similar way to make variables, for example,

$ release-build/build.sh BUILD_USERHOST=etch VERSION=1.7.1234 KEYSDIR=/home/dpw/work/rabbit/release-build/keys CHANGELOG_EMAIL="David Wragg <dpw@lshift.net>" SIGNING_PARAMS='SIGNING_KEY=BE8CA7D4' DEPLOY_USERHOST=rabbitmq-deploy@mrbraver.lshift.net SSH_OPTS="-i /home/dpw/work/rabbit/release-build/ssh-key/id_rsa"

Many of these variables are optional, though omitting them may result
in parts of the build being skipped.  The variables are documented at
the top of build.sh.  The minimal set required for a full build and
deployment is VERSION, BUILD_USERHOST and
DEPLOY_USERHOST (the last three specifying the hosts to use during the
build).

