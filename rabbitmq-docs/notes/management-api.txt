We should document this API using edoc

rabbit_networking:
  actice_listeners/0
  start_tcp_listener/2
  stop_tcp_listener/2
  listeners_connections/? :: ? -> [reader()]
rabbit_reader:
  all_connections/0 :: () -> [reader()] %% includes erlang clients
  terminate/2 :: reader(), force=boolean() -> ok_error()
  info/1 :: reader() -> connection_info()
  channels/1 :: reader() -> [channel()]
rabbit_channel:
  info/1 :: channel() -> channel_state() %% should include buffer size
  terminate/1 :: channel() -> ok_error()
rabbit_access_control:
  %% pretty much everything
rabbit_realm:
  lookup/1
  list_vhost_realms/1
  add_realm/1
  delete_realm/1
rabbit_amqqueue:
  lookup/1
  list_vhost_queues/1
  stat/1
  stat_all/0
  purge/1
  terminate/1
  info/1 :: queue() -> queue_state() %% includes messages
  consumers/1 :: queue() -> [#cr()]
  transactions/1 :: queue() -> [#tx()]
rabbit_exchange:
  lookup/1
  list_vhost_exchanges/1
  bindings/1
  delete_binding/2
  add_binding/2
  delete/1
rabbit_persister:
  force_snapshot/0
  current_snapshot/0 :: () -> #snapshot{}
rabbit_mnesia:
  status/0
  reset/0
  force_reset/0
  cluster/1
